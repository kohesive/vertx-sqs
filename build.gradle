apply from: "$rootDir/project-settings.gradle"

buildscript {
    repositories {
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

apply from: "$rootDir/gradle/sonatype-top.gradle"

apply from: "$rootDir/gradle/kotlin-settings.gradle"

apply from: "$rootDir/gradle/idea.gradle"
apply from: "$rootDir/gradle/sonatype-subproj.gradle"
apply from: "$rootDir/gradle/bintray.gradle"



if (!JavaVersion.current().java11Compatible) {
    throw new IllegalStateException('''A Haiku:
                                      |  This needs Java 11,
                                      |  You are using something else,
                                      |  Refresh. Try again.'''.stripMargin())
}

repositories {
    mavenCentral()
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    compile "io.vertx:vertx-core:$version_vertx"
    compile "io.vertx:vertx-lang-groovy:$version_vertx"
    compile "io.vertx:vertx-service-factory:$version_vertx"
    compile "io.vertx:vertx-service-proxy:$version_vertx"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation platform("com.amazonaws:aws-java-sdk-bom:$version_aws")
    implementation("com.amazonaws:aws-java-sdk-sqs")

    compile "nl.komponents.kovenant:kovenant:$version_kovenant"

    compileOnly "io.vertx:vertx-codegen:$version_vertx"
    compile "io.vertx:vertx-codegen:$version_vertx"
    compile "io.vertx:vertx-codegen:$version_vertx:processor"

    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

    testCompile "io.vertx:vertx-unit:$version_vertx"

    implementation "io.github.microutils:kotlin-logging-jvm:$logging_version"

    testCompile "org.elasticmq:elasticmq-core_2.13:$version_elasticmq"
    testCompile "org.elasticmq:elasticmq-rest-sqs_2.13:$version_elasticmq"
    testCompile "junit:junit:$version_junit"
}

wrapper {
    gradleVersion = "$version_gradle"
}

defaultTasks 'clean', 'build', 'check'